/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import de.thetaphi.forbiddenapis.gradle.CheckForbiddenApis

apply plugin: 'elasticsearch.build'

archivesBaseName = 'elasticsearch-security-cli'

dependencies {
    compileOnly project(":server")
    compileOnly project(path: xpackModule('core'), configuration: 'default')
    compile "org.bouncycastle:bcpkix-jdk15on:${versions.bouncycastle}"
    compile "org.bouncycastle:bcprov-jdk15on:${versions.bouncycastle}"
    testImplementation 'com.google.jimfs:jimfs:1.1'
    testCompile project(":test:framework")
    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts')
}

dependencyLicenses {
    mapping from: /bc.*/, to: 'bouncycastle'
}

rootProject.globalInfo.ready {
    if (project.inFipsJvm) {
        test.enabled = false
        testingConventions.enabled = false
        // Forbiden APIs non-portable checks fail because bouncy castle classes being used from the FIPS JDK since those are
        // not part of the Java specification - all of this is as designed, so we have to relax this check for FIPS.
        tasks.withType(CheckForbiddenApis) {
            bundledSignatures -= "jdk-non-portable"
        }
        // FIPS JVM includes many classes from bouncycastle which count as jar hell for the third party audit,
        // rather than provide a long list of exclusions, disable the check on FIPS.
        thirdPartyAudit.enabled = false

    }
}
