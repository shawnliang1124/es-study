plugins {
    id 'java'
}
repositories {
    mavenCentral()
}
dependencies {
    compile 'org.apache.logging.log4j:log4j-core:2.11.1'
}

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Tests have to clean mid-test but we don't want the sample jars to go away
clean.enabled = false

["0.0.1", "0.0.2"].forEach { v ->
    ["elasticsearch", "other"].forEach { p ->
        task "dummy-${p}-${v}"(type: Jar) {
            destinationDir = file("${buildDir}/testrepo/org/${p}/gradle/dummy-io/${v}/")
            archiveName = "dummy-io-${v}.jar"
            from sourceSets.main.output
            include "**/TestingIO.class"
            if (v == "0.0.2") {
                manifest {
                    attributes(
                            "X-Different": "Different manifest, different jar"
                    )
                }
            }
        }
        build.dependsOn("dummy-${p}-${v}")
    }
}

["0.0.1"].forEach { v ->
    ["elasticsearch", "other"].forEach { p ->
        task "broken-log4j-${p}-${v}"(type: Jar) {
            destinationDir = file("${buildDir}/testrepo/org/${p}/gradle/broken-log4j/${v}/")
            archiveName = "broken-log4j-${v}.jar"
            from sourceSets.main.output
            include "**/TestingLog4j.class"
        }
        build.dependsOn("broken-log4j-${p}-${v}")
    }
}

task jarhellJdk(type: Jar) {
    destinationDir = file("${buildDir}/testrepo/org/other/gradle/jarhellJdk/0.0.1/")
    archiveName = "jarhellJdk-0.0.1.jar"
    from sourceSets.main.output
    include "**/String.class"
    into "java/lang"
    build.dependsOn("jarhellJdk")
}
